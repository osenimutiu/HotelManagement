@model WebApplicationHotelManagement.ViewModel.BookingViewModel
@{
    ViewBag.Title = "Index";
}

<div style="margin-top: 60px;">
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#divnewBooking" data-backdrop="static" data-keyboard="false">New Booking</button>
</div>

<div id="divnewBooking" class=" modal fade" role="dialog" style="width:auto">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                <button type="button" class="close" data-dismiss="modal"> &times;</button>
                <h5 class="modal-title text-center">New Booking</h5>
            </div>
            <div class="modal-body">
                <form id="formCustomerBooking">
                    <div class="container">
                        @Html.HiddenFor(model => model.BookingId, new { @id = "txtBookingId" })
                        <div class="row">
                            <div class="form-group  col-md-3">
                                @Html.LabelFor(model => model.CustomerName)
                                @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control", id = "txtCustomerName" })
                                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.CustomerAddress)
                                @Html.TextBoxFor(model => model.CustomerAddress, new { @class = "form-control", id = "txtCustomerAddress" })
                                @Html.ValidationMessageFor(model => model.CustomerAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.CustomerPhone)
                                @Html.TextBoxFor(model => model.CustomerPhone, new { @class = "form-control", id = "txtCustomerPhone" })
                                @Html.ValidationMessageFor(model => model.CustomerPhone, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.BookingFrom)
                                @Html.EditorFor(model => model.BookingFrom, new { htmlAttrributes = new { @readonly = "true", Value = Model.BookingFrom.ToString("yyyy-MM-dd"), @class = "form-control datepicker", id = "txtBookingFrom" } })
                                @Html.ValidationMessageFor(model => model.BookingFrom, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.BookingTo)
                                @Html.EditorFor(model => model.BookingTo, new { htmlAttrributes = new { @readonly = "true", Value = Model.BookingTo.ToString("yyyy-MM-dd"), @class = "form-control datepicker", id = "txtBookingTo" } })
                                @Html.ValidationMessageFor(model => model.BookingTo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.AssignRoomId)
                                @Html.DropDownListFor(model => model.AssignRoomId, @Model.ListOfRooms, new { @class = "form-control", id = "ddAssignRoom" })
                                @Html.ValidationMessageFor(model => model.AssignRoomId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.NoOfMembers)
                                @Html.TextBoxFor(model => model.NoOfMembers, new { @class = "form-control", id = "txtNoOfMembers" })
                                @Html.ValidationMessageFor(model => model.NoOfMembers, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </form>
            </div>



            <div class="modal-footer">
                <button id="btnSave" type="button" class="btn btn-success"> Save</button>

                <button type="button" class="btn btn-danger" data-dismiss="modal">Close </button>
            </div>
        </div>
    </div>
</div>

<div style="margin: 10px;"></div>
<div id="divBookingHistory">

</div>
@*<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>*@
@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
@section Scripts{
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            LoadBookingHistory();
            DateTimePicker();
            $("#btnSave").click(function () {
                //if (!$("#formCustomerBooking").valid()) {
                //    return;
                //};
                AddCustomerBooking();
            });

           
        });



        function LoadBookingHistory() {
            //$("#divBookingHistory")
            $.ajax({
                async: true,
                type: 'GET',
                dataType: 'HTML',
                contentType: false,
                processType: false,
                url: '/Booking/GetAllBookingHistory',
                success: function (data) {
                    $("#divBookingHistory").html(data);
                },
                error: function () {
                    alert('There is some errors to process your request. Please try again after sometimes');
                }

            });
        }





        function ResetBooking() {
            $("#txtCustomerName").val('');
            $("#txtCustomerAddress").val('');
            $("#txtCustomerPhone").val('');
            $("#ddAssignRoom").val(1);
            $("#txtNoOfMembers").val('');
            $("#txtCustomerName").focus();

        }

        function AddCustomerBooking() {
            var objBookingViewModel = {};
            objBookingViewModel.CustomerName = $("#txtCustomerName").val();
            objBookingViewModel.CustomerAddress = $("#txtCustomerAddress").val();
            objBookingViewModel.CustomerPhone = $("#txtCustomerPhone").val();
            objBookingViewModel.BookingFrom = $("#BookingFrom").val();
            objBookingViewModel.BookingTo = $("#BookingTo").val();
            objBookingViewModel.AssignRoomId = $("#ddAssignRoom").val();
            objBookingViewModel.NoOfMembers = $("#txtNoOfMembers").val();

            $.ajax({
                async: true,
                type: 'POST',
                datatype: 'JSON',
                contentType: 'application/json; charset=utf-8',
                url: '/Booking/Index',
                data: JSON.stringify(objBookingViewModel),
                success: function (data) {
                    if (data.success === true) {
                        alert(data.message);
                        ResetBooking();
                        LoadBookingHistory();
                    }
                },
                error: function () {
                    alert('There is some errors to process your request. Please try again after sometimes');
                }
            });
        }


        function DateTimePicker() {
            $('.datepicker').datepicker({
                dateFormat: 'yyyy-MM-dd',
                changeMonth: true,
                changeYear: true,
                showOn: 'button',
                sideBySide: true,
                controlType: 'select',
                buttonText: '<span class="glyphicon glyphicon-calendar"></span>',
                minDate: new Date()
            });
            

            $("#txtBookingFrom").change(function () {
                var date2 = $("#txtBookingFrom").datepicker('getDate', '+1d');
                date2.setDate(date2.getDate() + 1);
                $("#txtBookingTo").Val().datepicker('option', 'minDate', date2);
                $("#txtBookingTo").datepicker('setDate', date2);
            });
        }




    </script>
}
    